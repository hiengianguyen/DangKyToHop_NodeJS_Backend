<head>
    <title>Đăng Ký Tổ Hợp | Chỉnh Sửa Trang Cá Nhân</title>
    <link rel="stylesheet" href="/css/school.css">
    <link rel="stylesheet" href="/css/profile.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />
</head>

<div id="master">
    <div class="box-radius shadow">
        <div class="d-flex align-items-between justify-content-start">
            <h4 class="mb-0">Chỉnh sửa trang cá nhân</h4>
        </div>
        <div class="mb-3 d-flex justify-content-center align-items-center">
            <div class="card-body-profile my-4">
                <form
                    class="profile-user"
                    id="form-edit-profile"
                    method="POST"
                    action="/me/profile/update"
                >
                <div class="info-top containers mb-3 d-flex justify-content-center">
                    <img
                        class="profile-img-user mt-2"
                        id="profile-img"
                        src="{{user.avatar}}"
                        alt="User"
                    />
                </div>
                <div class="container d-flex justify-content-center">
                    <div class="row mb-3">
                        <div class="d-flex flex-column avatar-img">
                            <input type="file" class="mt-3" id="inputImage" accept="image/*" required>
                            <button id="recropBtn" class="mt-4 btn btn-primary" type="button" style="display:none;">Cắt lại</button>
                        </div>
                        <input id="input-get-data" type="text" value="{{submitedDetail.avatarLink}}" name="avatarLink" style="display: none;">
                    </div>
                    <input id="avatar-input" name="avatar" type="text" style="display:none" />
                </div>
                <div class="profile-dad-name info mt-8 flex-column-reverse">
                    <div class="form-group">
                    <label for="profile-name-input" class="form-label-profile">Họ và tên:</label>
                    <input
                        type="text"
                        class="form-control login__input"
                        name="fullName"
                        rules="required|min:10"
                        style="text-transform: capitalize;"
                        value="{{user.fullName}}"
                    />
                    <span class="form-message"></span>
                    </div>

                    <div class="form-group">
                        <label for="profile-phone-input" class="form-label-profile">Số điện thoại:</label>
                        <input
                            type="text"
                            class="form-control login__input"
                            name="phone"
                            rules="required|number|length:10"
                            value="{{user.phone}}"
                        />
                        <span class="form-message"></span>
                    </div>

                    <div class="btn-edit d-flex mt-2">
                        <button type="button" id="btn-update-profile" class="btn bg-success btn-lg text-white">Cập nhật</button>
                    </div>
                </div>
                </form>
            </div>
        </div>
    </div>
    <div id="footer">
        <div class="d-flex justify-content-center text-center">
            <p class="footer-text mb-0">
                © 2025 Trường THPT Duy Tân, Phường Quảng Phú, TP. Đà Nẵng.
            </p>
        </div>
    </div>
</div>

<div id="loading-full" class="position-fixed" style="display: none;">
    <div class="d-flex align-items-center flex-column">
        <h2 style="font-family: 'Lexend', sans-serif;color:#29a9ef;">Đang tải dữ liệu...</h2>
        <div class="spinner-border mt-4" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

<div id="cropperContainer" style="display:none; position:fixed; inset:0; background:#000a; z-index:9998; justify-content:center; align-items:center;">
    <img id="preview" style="max-height:90vh;" />
    <button id="cropBtn" type="button" style="position:absolute; bottom:20px;">Cắt ảnh</button>
</div>

<script
  src="/validationForm.js"
  onload="varidator('#form-edit-profile')"
></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js" defer></script>

<script type="module">
    import { uploadImageToCloudinary } from '/uploadImageToCloudinary.js';
    import { fetchAsync } from '/fetchAsync.js';
    // Gắn uploadImageToCloudinary vào window để gọi được từ HTML
    window.uploadImageToCloudinary = uploadImageToCloudinary;
    window.fetchAsync = fetchAsync;

    var sideBar = document.getElementById('sidebar');
    const master = document.getElementById('master');
    window.addEventListener('load', function () {
        document.getElementById('body-app').style.overflowY = 'auto';
        sideBar.parentElement.style.height = '100%';
        master.style.height = master.parentElement.clientHeight;
    })
    
    const litSidebars = Array.from(document.querySelectorAll('#sidebar .box'));
    litSidebars.pop();

    litSidebars.forEach((li) => {
        if(li.getAttribute('value') === 'profile') {
            li.parentElement.classList.add('active');
        } else {
            li.parentElement.classList.remove('active');
        }
        li.parentElement.onclick = () => {
        li.parentElement.classList.add('active')
        litSidebars.forEach((liCheckClassActive) => {
            if(liCheckClassActive !== li) {
            liCheckClassActive.parentElement.classList.remove('active');
            }
        })
        }
    })

    const inputImage = document.getElementById('inputImage');
    const hiddenAvatarInput = document.getElementById("avatar-input");
    const preview = document.getElementById('preview');
    const cropBtn = document.getElementById('cropBtn');
    const cropperContainer = document.getElementById('cropperContainer');

    let cropper;

    const recropBtn = document.getElementById('recropBtn');
    let lastImageURL = '';

    inputImage.addEventListener('change', () => {
        const file = inputImage.files[0];
        if (file) {
            lastImageURL = URL.createObjectURL(file);
            showCropper(lastImageURL);
        }
    });

    cropBtn.addEventListener('click',  () => {
        const canvas = cropper.getCroppedCanvas({ width: 300 });
        const dataUrl = canvas.toDataURL('image/jpeg');
        hiddenAvatarInput.value = dataUrl;

        imgProfile.src = dataUrl;
        imgProfile.style.display = 'block';
        recropBtn.style.display = 'inline-block';

        cropper.destroy();
        cropper = null;
        cropperContainer.style.display = 'none';
    });

    recropBtn.addEventListener('click', () => {
        if(lastImageURL != '') {
            showCropper(lastImageURL);
        }
    });

    function showCropper(imageUrl) {
        preview.src = imageUrl;
        cropperContainer.style.display = 'flex';

        preview.onload = function () {
            if (cropper) cropper.destroy();
            cropper = new Cropper(preview, {
                aspectRatio: 1,
                viewMode: 1,
                dragMode: 'move',
                cropBoxResizable: false,
                cropBoxMovable: false,
                movable: true,
                zoomable: true,
                ready() {
                    cropper.setCropBoxData({ width: 300, height: 400 });
                }
            });
        };
    }

    const formUpdate = document.querySelector('#form-edit-profile');
    const btnUpdate = document.querySelector('#btn-update-profile');
    const imgProfile = document.getElementById("profile-img");
    const loading = document.getElementById('loading-full');
    const loadingText = loading.querySelector('h2');

    btnUpdate.onclick = async () => {
        const url = imgProfile.src;
        if(url) {
            loadingText.textContent = 'Đang cập nhật dữ liệu...';
            loading.style.display = 'flex';

            const uploaded = await uploadImageToCloudinary(url, 'users');
            loading.style.display = 'none';
            if (uploaded.data) {
                imgProfile.src = uploaded.data; 
                hiddenAvatarInput.value = uploaded.data;
            }
            else {
                console.error('Error uploading image:', uploaded.error);
                toastMessage("Thông báo", 'Có lỗi khi tải ảnh lên', "error", 6000, "❌", 1000);
                return
            }
        }

        const formData = new FormData(formUpdate);
        const data = Object.fromEntries(formData.entries());
        const result = await fetchAsync('/me/profile/update', 'POST', data, null, true);

        if (result.type === "success") {
            localStorage.setItem('textMessage', result.message);
            localStorage.setItem('typeToast', result.type);
            localStorage.setItem('toastIcon', result.icon);
            const currentUrl = window.location.origin + `/me/profile?toastmessage=true`;
            window.location.href = currentUrl;
        }
        else {
            toastMessage("Thông báo", result.message, "error", 6000, "❌", 1000);
        }
    }
</script>